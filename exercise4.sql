-- MySQL Script generated by MySQL Workbench
-- Wed 15 Jan 2020 10:46:35 CET
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Exersice4
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Exersice4
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Exersice4` ;
USE `Exersice4` ;

-- -----------------------------------------------------
-- Table `Exersice4`.`Specialist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Exersice4`.`Specialist` (
  `Name_ID` INT NOT NULL,
  `Field_area` VARCHAR(45) NULL,
  PRIMARY KEY (`Name_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Exersice4`.`Doctor_ID`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Exersice4`.`Doctor_ID` (
  `Name_ID` VARCHAR(45) NOT NULL,
  `Name` INT NULL,
  `Date_of_birth` DATETIME NULL,
  `Adress` VARCHAR(45) NULL,
  `Phone_number` INT NULL,
  `Salary` INT NULL,
  `Specialist_Name_ID` INT NOT NULL,
  PRIMARY KEY (`Name_ID`),
  INDEX `fk_Doctor_ID_Specialist1_idx` (`Specialist_Name_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Doctor_ID_Specialist1`
    FOREIGN KEY (`Specialist_Name_ID`)
    REFERENCES `Exersice4`.`Specialist` (`Name_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Exersice4`.`Medical`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Exersice4`.`Medical` (
  `Name_ID` INT NOT NULL,
  `Medical_work` VARCHAR(45) NULL,
  `Overtime_rate` VARCHAR(45) NULL,
  `Doctor_ID_Name_ID` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Name_ID`),
  INDEX `fk_Medical_Doctor_ID_idx` (`Doctor_ID_Name_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Medical_Doctor_ID`
    FOREIGN KEY (`Doctor_ID_Name_ID`)
    REFERENCES `Exersice4`.`Doctor_ID` (`Name_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Exersice4`.`Appointment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Exersice4`.`Appointment` (
  `Patient_ID` INT NOT NULL,
  `Name_ID` INT NOT NULL,
  `Date` DATETIME NULL,
  `Time` VARCHAR(45) NULL,
  `Doctor_ID_Name_ID` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Patient_ID`, `Name_ID`),
  INDEX `fk_Appointment_Doctor_ID1_idx` (`Doctor_ID_Name_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Appointment_Doctor_ID1`
    FOREIGN KEY (`Doctor_ID_Name_ID`)
    REFERENCES `Exersice4`.`Doctor_ID` (`Name_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Exersice4`.`Patient`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Exersice4`.`Patient` (
  `Patient_ID` INT NOT NULL,
  `Patient_name` INT NULL,
  `Adress` INT NULL,
  `Date_of_birth` DATETIME NULL,
  `Phone_number` INT NULL,
  `Appointment_Patient_ID` INT NOT NULL,
  `Appointment_Name_ID` INT NOT NULL,
  PRIMARY KEY (`Patient_ID`),
  INDEX `fk_Patient_Appointment1_idx` (`Appointment_Patient_ID` ASC, `Appointment_Name_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Patient_Appointment1`
    FOREIGN KEY (`Appointment_Patient_ID` , `Appointment_Name_ID`)
    REFERENCES `Exersice4`.`Appointment` (`Patient_ID` , `Name_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Exersice4`.`Payment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Exersice4`.`Payment` (
  `Patient_ID` INT NOT NULL,
  `Details` VARCHAR(45) NULL,
  `Method` VARCHAR(45) NULL,
  `Patient_Patient_ID` INT NOT NULL,
  PRIMARY KEY (`Patient_ID`),
  INDEX `fk_Payment_Patient1_idx` (`Patient_Patient_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Payment_Patient1`
    FOREIGN KEY (`Patient_Patient_ID`)
    REFERENCES `Exersice4`.`Patient` (`Patient_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Exersice4`.`Bill`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Exersice4`.`Bill` (
  `Patient_ID` INT NOT NULL,
  `Total` VARCHAR(45) NULL,
  PRIMARY KEY (`Patient_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Exersice4`.`Bill_has_Payment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Exersice4`.`Bill_has_Payment` (
  `Bill_Patient_ID` INT NOT NULL,
  `Payment_Patient_ID` INT NOT NULL,
  PRIMARY KEY (`Bill_Patient_ID`, `Payment_Patient_ID`),
  INDEX `fk_Bill_has_Payment_Payment1_idx` (`Payment_Patient_ID` ASC) VISIBLE,
  INDEX `fk_Bill_has_Payment_Bill1_idx` (`Bill_Patient_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Bill_has_Payment_Bill1`
    FOREIGN KEY (`Bill_Patient_ID`)
    REFERENCES `Exersice4`.`Bill` (`Patient_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Bill_has_Payment_Payment1`
    FOREIGN KEY (`Payment_Patient_ID`)
    REFERENCES `Exersice4`.`Payment` (`Patient_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
